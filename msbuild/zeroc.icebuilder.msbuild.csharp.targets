<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2009-2018 ZeroC, Inc. All rights reserved. -->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <Choose>
        <When Condition="'$(MSBuildAssemblyVersion)' == '' or '$(MSBuildAssemblyVersion)' &lt; '15.0'">
            <PropertyGroup>
                <SliceCompileAssemblyDir>net45</SliceCompileAssemblyDir>
            </PropertyGroup>
        </When>
        <Otherwise>
            <PropertyGroup>
                <SliceCompileAssemblyDir>netstandard2.0</SliceCompileAssemblyDir>
            </PropertyGroup>
        </Otherwise>
    </Choose>

    <!-- Import our custom MSbuild tasks used to build Ice for CSharp projects -->
    <UsingTask TaskName="IceBuilder.MSBuild.Slice2CSharpTask"
               AssemblyFile="$(MSBuildThisFileDirectory)..\tools\$(SliceCompileAssemblyDir)\zeroc.icebuilder.msbuild.dll"/>

    <UsingTask TaskName="IceBuilder.MSBuild.Slice2CSharpDependTask"
               AssemblyFile="$(MSBuildThisFileDirectory)..\tools\$(SliceCompileAssemblyDir)\zeroc.icebuilder.msbuild.dll"/>

    <!-- Import IceBuilder common settings -->
    <Import Project="$(MSBuildThisFileDirectory)\zeroc.icebuilder.msbuild.common.props"/>

    <ItemGroup>
        <PropertyPageSchema Include="$(MSBuildThisFileDirectory)ProjectItemsSchema.xaml" />
        <PropertyPageSchema Include="$(MSBuildThisFileDirectory)SliceCompile.xaml">
            <Context>BrowseObject</Context>
        </PropertyPageSchema>
        <PropertyPageSchema Include="$(MSBuildThisFileDirectory)SliceCompile.CSharpProject.xaml"/>
    </ItemGroup>

    <!-- These capability is used to apply the Slice property page designer -->
    <ItemGroup>
        <ProjectCapability Include="SliceCompile" />
    </ItemGroup>

    <!--
        Settings that are only supported with MSBuild 15.0 and up, the item Update
        attribute is not supported with older MSBuild versions, and will fail to parse
        the targets files if directly set here.
    -->
    <Import Project="$(MSBuildThisFileDirectory)\zeroc.icebuilder.csharp.15.0.targets"
            Condition="'$(MSBuildAssemblyVersion)' &gt; '14.0'"/>

    <Target Name="SliceCompile" BeforeTargets="BeforeBuild"
            Condition="@(SliceCompile) != ''">

        <Error Text="Ice Installation not detected."
               Condition="'$(IceHome)' == ''" />

        <Error Text="The Ice Builder requires Ice Version 3.6 or later but $(IceHome) version is $(IceVersion.Replace('.51', 'b'))"
               Condition="'$(IceVersion)' == '' Or '$(IceIntVersion)' == '' Or '$(IceIntVersion)' &lt; '30600' Or '$(IceIntVersion)' == '30651'" />

        <MakeDir Directories="%(SliceCompile.OutputDir)"/>

        <!-- First we check dependencies and decide what must be rebuild -->
        <Slice2CSharpDependTask
            WorkingDirectory      = "$(MSBuildProjectDirectory)"
            IceHome               = "$(IceHome)"
            IceToolsPath          = "$(IceToolsPath)"
            Sources               = "@(SliceCompile)">

            <Output
                ItemName          = "_SliceCompile"
                TaskParameter     = "ComputedSources"/>

        </Slice2CSharpDependTask>

        <!-- Compile the Slice files -->
        <Slice2CSharpTask
            WorkingDirectory      = "$(MSBuildProjectDirectory)"
            IceHome               = "$(IceHome)"
            IceToolsPath          = "$(IceToolsPath)"
            OutputDir             = "%(_SliceCompile.OutputDir)"
            IncludeDirectories    = "%(_SliceCompile.IncludeDirectories)"
            AdditionalOptions     = "%(_SliceCompile.AdditionalOptions)"
            Sources               = "@(_SliceCompile)"
            Condition             = "'%(_SliceCompile.BuildRequired)' == 'True'"/>

        <!--
            Include all C# generated source items that have not been manually include, we want to delay this until we are
            running SliceCompile target so that the Visual Studio extension has a chance to add the items to the project in
            a persintent way and if the extension is not enabled or we are building from the command line we just add the
            missing items in a trasient way.
        -->
        <ItemGroup>
            <ClCompile Include="@(_SliceCompile->'%(OutputDir)\%(Filename).cs')"
                       Exclude="@(Compile)" />
        </ItemGroup>
    </Target>

    <Target Name="SliceCompileClean" BeforeTargets="Clean">
        <Delete Files="@(SliceCompile->'%(OutputDir)\%(Filename).cs')"/>
        <Delete Files="@(SliceCompile->'%(OutputDir)\SliceCompile.%(Filename).d"/>
    </Target>
</Project>
